const TelegramBot = require("node-telegram-bot-api");

// replace the value below with the Telegram token you receive from @BotFather
const token = "6879158440:AAHuwMwvHrsP-8bimMGmkKwn5eYGya0XAG0";

// Create a bot that uses 'polling' to fetch new updates
const bot = new TelegramBot(token, { polling: true });

// Matches "/echo [whatever]"
bot.onText(/\/echo (.+)/, (msg, match) => {
  // 'msg' is the received Message from Telegram
  // 'match' is the result of executing the regexp above on the text content
  // of the message

  const chatId = msg.chat.id;
  const resp = match[1]; // the captured "whatever"

  // send back the matched "whatever" to the chat
  bot.sendMessage(chatId, resp);
});

bot.onText(/\/start/, (msg) => {
  bot.sendMessage(msg.chat.id, "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", {
    reply_markup: {
      keyboard: [["–ù–∞—Ñ–∞—Ä–º–∏—Ç—å 1 –º–æ–Ω–µ—Ç—É"], ["–§–∞—Ä–º–∏ 100 –º–æ–Ω–µ—Ç"]],
      resize_keyboard: true,
      one_time_keyboard: true,
    },
  });
});

// Listen for any kind of message. There are different kinds of
// messages.
bot.on("message", (msg) => {
  const chatId = msg.chat.id;

  // send a message to the chat acknowledging receipt of their message
  bot.sendMessage(chatId, "–ü—Ä–∏–≤–µ—Ç!");

  const imagePath = "./images.jpg";

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
      bot
            // .sendDice(chatId)
    .sendPhoto(chatId, imagePath, { caption: "–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ! üñºÔ∏è",
      reply_markup: {
        keyboard: [["–ù–∞—Ñ–∞—Ä–º–∏—Ç—å 1 –º–æ–Ω–µ—Ç—É"], ["–§–∞—Ä–º–∏ 100 –º–æ–Ω–µ—Ç"]],
        resize_keyboard: true,
        one_time_keyboard: true,
      }, })
    .then(() => {
      console.log("–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ");
    })
    .catch((error) => {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:", error);
    });
});
